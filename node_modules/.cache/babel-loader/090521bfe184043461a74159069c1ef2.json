{"ast":null,"code":"import _slicedToArray from \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\src\\\\containers\\\\Profile\\\\profile.container.js\";\nimport React, { Fragment, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormModel } from '@inrupt/solid-react-components';\nimport { successToaster, errorToaster } from \"../../utils\";\nimport { Loader } from \"../../components/Utils\";\nimport { Header, ProfileContainer, ProfileWrapper, FormRenderContainer, AutoSaveNotification, WebId } from \"./profile.style\";\nimport { Image } from \"./components\";\nimport { AutoSaveSpinner } from \"../../components\";\nvar defaultProfilePhoto = '/img/icon/empty-profile.svg';\n/**\n * We are using ldflex to fetch profile data from a solid pod.\n * ldflex libary is using json-LD for this reason you will see async calls\n * when we want to get a field value, why ? becuase they are expanded the data\n * this means the result will have a better format to read on Javascript.\n * for more information please go to: https://github.com/solid/query-ldflex\n */\n\nvar Profile = function Profile(_ref) {\n  var webId = _ref.webId;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _onError = function onError(e) {\n    if (e.message.toString().indexOf('Validation failed') < 0) {\n      errorToaster(t('formLanguage.renderer.formNotLoaded'), t('notifications.error'), {\n        label: t('errorFormRender.link.label'),\n        href: t('errorFormRender.link.href')\n      });\n      setIsLoading(false);\n    }\n  };\n\n  var _onDelete = function onDelete() {\n    successToaster(t('formLanguage.renderer.fieldDeleted'), t('notifications.success'));\n  };\n\n  var _onAddNewField = function onAddNewField() {\n    successToaster(t('formLanguage.renderer.fieldAdded'), t('notifications.success'));\n  };\n\n  return React.createElement(ProfileWrapper, {\n    \"data-testid\": \"profile-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(ProfileContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, webId && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Image, Object.assign({\n    webId: webId,\n    defaultProfilePhoto: defaultProfilePhoto\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), React.createElement(AutoSaveNotification, {\n    className: \"banner-wrap--warning banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner-wrap__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon fa fa-exclamation-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), t('profile.autosaveNotification'))), React.createElement(FormRenderContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(WebId, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: \"id-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: webId,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, webId)), React.createElement(FormModel, Object.assign({\n    modelPath: 'https://solidsdk.inrupt.net/sdk/userprofile.ttl#formRoot',\n    podPath: webId,\n    viewer: false,\n    onInit: function onInit() {\n      return setIsLoading(true);\n    },\n    onLoaded: function onLoaded() {\n      return setIsLoading(false);\n    },\n    onSuccess: function onSuccess() {},\n    onSave: function onSave() {},\n    onError: function onError(error) {\n      _onError(error);\n    },\n    onAddNewField: function onAddNewField(response) {\n      return _onAddNewField(response);\n    },\n    onDelete: function onDelete(response) {\n      return _onDelete(response);\n    },\n    settings: {\n      theme: {\n        inputText: 'input-wrap',\n        inputCheckbox: 'sdk-checkbox checkbox',\n        form: 'inrupt-sdk-form',\n        childGroup: 'inrupt-form-group'\n      },\n      savingComponent: AutoSaveSpinner\n    }\n  }, {\n    autoSave: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))), isLoading && React.createElement(Loader, {\n    absolute: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })));\n};\n\nexport default Profile;","map":{"version":3,"sources":["c:/Users/alber/Desktop/ejemplo/src/containers/Profile/profile.container.js"],"names":["React","Fragment","useState","useTranslation","FontAwesomeIcon","FormModel","successToaster","errorToaster","Loader","Header","ProfileContainer","ProfileWrapper","FormRenderContainer","AutoSaveNotification","WebId","Image","AutoSaveSpinner","defaultProfilePhoto","Profile","webId","t","isLoading","setIsLoading","onError","e","message","toString","indexOf","label","href","onDelete","onAddNewField","modelPath","podPath","viewer","onInit","onLoaded","onSuccess","onSave","error","response","settings","theme","inputText","inputCheckbox","form","childGroup","savingComponent"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormModel } from '@inrupt/solid-react-components';\nimport { successToaster, errorToaster } from '@utils';\nimport { Loader } from '@util-components';\nimport {\n  Header,\n  ProfileContainer,\n  ProfileWrapper,\n  FormRenderContainer,\n  AutoSaveNotification,\n  WebId\n} from './profile.style';\nimport { Image } from './components';\nimport { AutoSaveSpinner } from '@components';\n\nconst defaultProfilePhoto = '/img/icon/empty-profile.svg';\n\n/**\n * We are using ldflex to fetch profile data from a solid pod.\n * ldflex libary is using json-LD for this reason you will see async calls\n * when we want to get a field value, why ? becuase they are expanded the data\n * this means the result will have a better format to read on Javascript.\n * for more information please go to: https://github.com/solid/query-ldflex\n */\ntype Props = { webId: String };\n\nconst Profile = ({ webId }: Props) => {\n  const { t } = useTranslation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onError = e => {\n    if (e.message.toString().indexOf('Validation failed') < 0) {\n      errorToaster(t('formLanguage.renderer.formNotLoaded'), t('notifications.error'), {\n        label: t('errorFormRender.link.label'),\n        href: t('errorFormRender.link.href')\n      });\n      setIsLoading(false);\n    }\n  };\n\n  const onDelete = () => {\n    successToaster(t('formLanguage.renderer.fieldDeleted'), t('notifications.success'));\n  };\n\n  const onAddNewField = () => {\n    successToaster(t('formLanguage.renderer.fieldAdded'), t('notifications.success'));\n  };\n\n  return (\n    <ProfileWrapper data-testid=\"profile-component\">\n      <ProfileContainer>\n        {webId && (\n          <Fragment>\n            <Header>\n              <Image\n                {...{\n                  webId,\n                  defaultProfilePhoto\n                }}\n              />\n            </Header>\n\n            <AutoSaveNotification className=\"banner-wrap--warning banner\">\n              <div className=\"banner-wrap__content\">\n                <i className=\"icon fa fa-exclamation-circle\" />\n                {t('profile.autosaveNotification')}\n              </div>\n            </AutoSaveNotification>\n\n            <FormRenderContainer>\n              <WebId>\n                <FontAwesomeIcon icon=\"id-card\" />\n                <a href={webId} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {webId}\n                </a>\n              </WebId>\n              <FormModel\n                {...{\n                  modelPath: 'https://solidsdk.inrupt.net/sdk/userprofile.ttl#formRoot',\n                  podPath: webId,\n                  viewer: false,\n                  onInit: () => setIsLoading(true),\n                  onLoaded: () => setIsLoading(false),\n                  onSuccess: () => {},\n                  onSave: () => {},\n                  onError: error => {\n                    onError(error);\n                  },\n                  onAddNewField: response => onAddNewField(response),\n                  onDelete: response => onDelete(response),\n                  settings: {\n                    theme: {\n                      inputText: 'input-wrap',\n                      inputCheckbox: 'sdk-checkbox checkbox',\n                      form: 'inrupt-sdk-form',\n                      childGroup: 'inrupt-form-group'\n                    },\n                    savingComponent: AutoSaveSpinner\n                  }\n                }}\n                autoSave\n              />\n            </FormRenderContainer>\n          </Fragment>\n        )}\n        {isLoading && <Loader absolute />}\n      </ProfileContainer>\n    </ProfileWrapper>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}