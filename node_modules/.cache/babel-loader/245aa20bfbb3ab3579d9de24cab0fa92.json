{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\src\\\\components\\\\Notifications\\\\notifications.component.js\";\nimport React from 'react';\nimport { LiveUpdate } from '@inrupt/solid-react-components';\nimport { Notifications } from \"./children\";\n\n/**\n * Notification container\n * @type {{compare, $$typeof, type}}\n */\nvar Notification = React.memo(function (_ref) {\n  var webId = _ref.webId,\n      inbox = _ref.inbox;\n\n  /**\n   * get inbox path to subscribe on LiveUpdate component\n   */\n  var inboxUrl = inbox.map(function (item) {\n    return item.path;\n  });\n  return inboxUrl ? React.createElement(LiveUpdate, {\n    subscribe: inboxUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Notifications, Object.assign({\n    webId: webId,\n    inbox: inbox\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))) : null;\n});\nexport default Notification;","map":{"version":3,"sources":["c:/Users/alber/Desktop/ejemplo/src/components/Notifications/notifications.component.js"],"names":["React","LiveUpdate","Notifications","Notification","memo","webId","inbox","inboxUrl","map","item","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,aAAT;;AAMA;;;;AAIA,IAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAW,gBAA6B;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;;AAC3D;;;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAT;AAAA,GAAd,CAAjB;AAEA,SAAOH,QAAQ,GACb,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEA,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD,gBAAmB;AAAEF,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,KAAK,EAALA;AAAT,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADa,GAIX,IAJJ;AAKD,CAXoB,CAArB;AAaA,eAAeH,YAAf","sourcesContent":["import React from 'react';\nimport { LiveUpdate } from '@inrupt/solid-react-components';\nimport { Notifications } from './children';\n\ntype Props = {\n  webId: string,\n  inboxes: Array<string>\n};\n/**\n * Notification container\n * @type {{compare, $$typeof, type}}\n */\nconst Notification = React.memo(({ webId, inbox }: Props) => {\n  /**\n   * get inbox path to subscribe on LiveUpdate component\n   */\n  const inboxUrl = inbox.map(item => item.path);\n\n  return inboxUrl ? (\n    <LiveUpdate subscribe={inboxUrl}>\n      <Notifications {...{ webId, inbox }} />\n    </LiveUpdate>\n  ) : null;\n});\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}