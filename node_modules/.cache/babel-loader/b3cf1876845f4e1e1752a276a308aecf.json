{"ast":null,"code":"import _defineProperty from \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncIterator from \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncIterator\";\nvar _jsxFileName = \"c:\\\\Users\\\\alber\\\\Desktop\\\\ejemplo\\\\src\\\\containers\\\\TicTacToe\\\\GameListPage\\\\children\\\\List\\\\list.component.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useLiveUpdate, NotificationTypes } from '@inrupt/solid-react-components';\nimport { useTranslation } from 'react-i18next';\nimport ldflex from '@solid/query-ldflex';\nimport { namedNode } from '@rdfjs/data-model';\nimport { Loader, Select } from \"../../../../../components/Utils\";\nimport tictactoeShape from \"../../../../../contexts/tictactoe-shape.json\";\nimport { ldflexHelper, errorToaster, storageHelper, notification as helperNotification } from \"../../../../../utils\";\nimport { GameStatusList, GameStatus, KnownInboxes } from \"../../../../../constants\";\nimport { Wrapper, ListWrapper, GameListContainers, GameListHeader } from \"./list.style\";\nimport GameItem from \"./children\";\nvar oldTimestamp;\nvar appPath;\n\n/**\n * Loads, filters, and displays the list of available games for the current user\n *\n * @param {String} title - Title of the list to display\n * @param {Array} games - A list of all of the games available to the user\n * @param {String} webId - WebID URL of the current user\n * @param {Function} deleteGame - A reference to the delete game function\n */\nvar GameList = function GameList(_ref) {\n  var title = _ref.title,\n      games = _ref.games,\n      webId = _ref.webId,\n      deleteGame = _ref.deleteGame;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(games),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredGames = _useState2[0],\n      setFilteredGames = _useState2[1];\n\n  var _useState3 = useState('All'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedFilter = _useState4[0],\n      setSelectedFilter = _useState4[1];\n  /**\n   * Set the visible game list depending on what filter the user has selected\n   * @param event\n   */\n\n\n  var filterGameList = function filterGameList(event) {\n    var filter = event.target.value;\n\n    if (filter === GameStatus.ALL) {\n      setFilteredGames(games);\n    } else {\n      var filteredList = games.filter(function (game) {\n        return game.status === filter;\n      });\n      setFilteredGames(filteredList);\n    }\n\n    setSelectedFilter(filter);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(GameListHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"selected-filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, t('game.status'), React.createElement(Select, {\n    name: \"selected-filter\",\n    id: \"selected-filter\",\n    options: GameStatusList,\n    defaultValue: selectedFilter,\n    onChange: filterGameList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))), filteredGames.length > 0 ? React.createElement(ListWrapper, {\n    className: \"ids-container__four-column grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, filteredGames.map(function (game) {\n    return React.createElement(GameItem, Object.assign({\n      game: game\n    }, {\n      key: game.url,\n      webId: webId,\n      deleteGame: deleteGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  })) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, t('game.nogames')));\n};\n\nvar List = function List(_ref2) {\n  var webId = _ref2.webId,\n      gamePath = _ref2.gamePath,\n      sendNotification = _ref2.sendNotification;\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      list = _useState6[0],\n      setList = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t;\n\n  var updates = useLiveUpdate();\n  var timestamp = updates.timestamp;\n  /**\n   * Gets the entire predicate named Node based on a field property from the shape\n   * @param {String} field Field to get the predicate for\n   * @returns {String} Predicate for a field name\n   */\n\n  var getPredicate = function getPredicate(field) {\n    var prefix = tictactoeShape['@context'][field.prefix];\n    return \"\".concat(prefix).concat(field.predicate);\n  };\n  /**\n   * Deletes a game from a contains predicate in a specific url\n   * @param {String} gameUrl Game to delete\n   * @param {String} documentUrl URL of the document with a contains predicate\n   */\n\n\n  var deleteGameFromContains = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(gameUrl, documentUrl) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ldflex[documentUrl]['schema:hasPart'].delete(namedNode(gameUrl));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteGameFromContains(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /**\n   * Deletes a game as invitee, sets the game status to Resigned and sends a notification to the owner\n   * @param {Object} game Game to be deleted\n   */\n\n\n  var resignedGame = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n      var url, documentUrl, status, actor, statusPredicate, licenseUrl, gameSettings, GLOBAL, GAME, inboxes, to;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = _ref4.url, documentUrl = _ref4.documentUrl, status = _ref4.status, actor = _ref4.actor;\n\n              if (!(status !== GameStatus.FINISHED)) {\n                _context2.next = 18;\n                break;\n              }\n\n              statusPredicate = 'http://data.totl.net/game/status';\n              licenseUrl = 'https://creativecommons.org/licenses/by-sa/4.0/'; // Change status to resigned\n\n              _context2.next = 6;\n              return ldflex[url][statusPredicate].replace(status, GameStatus.RESIGNED);\n\n            case 6:\n              if (appPath) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 9;\n              return storageHelper.getAppStorage(actor.webId);\n\n            case 9:\n              appPath = _context2.sent;\n\n            case 10:\n              // Send notification\n              gameSettings = \"\".concat(appPath, \"settings.ttl\");\n              GLOBAL = KnownInboxes.GLOBAL, GAME = KnownInboxes.GAME;\n              _context2.next = 14;\n              return helperNotification.findUserInboxes([{\n                path: actor.webId,\n                name: GLOBAL\n              }, {\n                path: gameSettings,\n                name: GAME\n              }]);\n\n            case 14:\n              inboxes = _context2.sent;\n              to = helperNotification.getDefaultInbox(inboxes, GAME, GLOBAL);\n              _context2.next = 18;\n              return sendNotification({\n                title: 'Tictactoe resignation',\n                summary: 'has resigned a game of TicTacToe',\n                actor: webId,\n                object: url\n              }, to.path, NotificationTypes.LEAVE, licenseUrl);\n\n            case 18:\n              _context2.next = 20;\n              return deleteGameFromContains(url, documentUrl);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function resignedGame(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  /**\n   * Deletes a game based on it's url. Checks for a deleted flag\n   * to check if it needs to be deleted from a contains predicate\n   * @param {Object} game Game to be deleted\n   */\n\n\n  var deleteGame = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(game) {\n      var url, deleted, documentUrl, opponent, newGames;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = game.url, deleted = game.deleted, documentUrl = game.documentUrl, opponent = game.opponent;\n\n              if (!deleted) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 4;\n              return deleteGameFromContains(url, documentUrl);\n\n            case 4:\n              _context3.next = 13;\n              break;\n\n            case 6:\n              if (!(opponent.webId === webId)) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 9;\n              return resignedGame(game);\n\n            case 9:\n              _context3.next = 13;\n              break;\n\n            case 11:\n              _context3.next = 13;\n              return ldflexHelper.deleteFile(url);\n\n            case 13:\n              newGames = list.filter(function (gameItem) {\n                return gameItem.url !== url;\n              });\n              setList(newGames);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function deleteGame(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  /**\n   * Get basic info for the opponent player (name and image url)\n   * @param {String} webId WebId of the player to look the Info for\n   * @returns {Object} An object with the basic information of the player\n   */\n\n\n  var getPlayerInfo = useCallback( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(webId) {\n      var name, nameValue, imageUrl, image;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return ldflex[webId]['vcard:fn'];\n\n            case 3:\n              name = _context4.sent;\n              nameValue = name && name.value.trim().length > 0 ? name.value : webId.toString();\n              _context4.next = 7;\n              return ldflex[webId]['vcard:hasPhoto'];\n\n            case 7:\n              imageUrl = _context4.sent;\n              image = imageUrl ? imageUrl.value : 'img/people.svg';\n              return _context4.abrupt(\"return\", {\n                name: nameValue,\n                image: image,\n                webId: webId\n              });\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", {\n                name: webId,\n                image: 'img/people.svg',\n                webId: webId\n              });\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12]]);\n    }));\n\n    return function (_x5) {\n      return _ref7.apply(this, arguments);\n    };\n  }());\n  /**\n   * Fetches all games from a url\n   * @param {String} url URL for the container to get the games from\n   */\n\n  var getGames = useCallback( /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url) {\n      var document, gameList, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, item, value, games, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, _item, game, gameData, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _value3, field, values, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _value4, val, _value5, opponent, actor;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return ldflexHelper.fetchLdflexDocument(url);\n\n            case 3:\n              document = _context5.sent;\n              gameList = [];\n\n              if (document) {\n                _context5.next = 7;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", gameList);\n\n            case 7:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context5.prev = 9;\n              _iterator = _asyncIterator(document['schema:hasPart']);\n\n            case 11:\n              _context5.next = 13;\n              return _iterator.next();\n\n            case 13:\n              _step = _context5.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context5.next = 17;\n              return _step.value;\n\n            case 17:\n              _value = _context5.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context5.next = 25;\n                break;\n              }\n\n              item = _value;\n              value = item.value;\n              if (value.includes('.ttl') && !value.includes('data.ttl') && !value.includes('settings.ttl')) gameList = [].concat(_toConsumableArray(gameList), [value]);\n\n            case 22:\n              _iteratorNormalCompletion = true;\n              _context5.next = 11;\n              break;\n\n            case 25:\n              _context5.next = 31;\n              break;\n\n            case 27:\n              _context5.prev = 27;\n              _context5.t0 = _context5[\"catch\"](9);\n              _didIteratorError = true;\n              _iteratorError = _context5.t0;\n\n            case 31:\n              _context5.prev = 31;\n              _context5.prev = 32;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context5.next = 36;\n                break;\n              }\n\n              _context5.next = 36;\n              return _iterator.return();\n\n            case 36:\n              _context5.prev = 36;\n\n              if (!_didIteratorError) {\n                _context5.next = 39;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 39:\n              return _context5.finish(36);\n\n            case 40:\n              return _context5.finish(31);\n\n            case 41:\n              games = [];\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _context5.prev = 44;\n              _iterator2 = _asyncIterator(gameList);\n\n            case 46:\n              _context5.next = 48;\n              return _iterator2.next();\n\n            case 48:\n              _step2 = _context5.sent;\n              _iteratorNormalCompletion2 = _step2.done;\n              _context5.next = 52;\n              return _step2.value;\n\n            case 52:\n              _value2 = _context5.sent;\n\n              if (_iteratorNormalCompletion2) {\n                _context5.next = 143;\n                break;\n              }\n\n              _item = _value2;\n              // the url at this point the document is being cached by LDFlex, we need to manually clear it\n              ldflex.clearCache(_item);\n              _context5.next = 58;\n              return ldflexHelper.fetchLdflexDocument(_item);\n\n            case 58:\n              game = _context5.sent;\n              gameData = {\n                url: _item\n              };\n\n              if (!game) {\n                _context5.next = 138;\n                break;\n              }\n\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _context5.prev = 63;\n              _iterator3 = _asyncIterator(tictactoeShape.shape);\n\n            case 65:\n              _context5.next = 67;\n              return _iterator3.next();\n\n            case 67:\n              _step3 = _context5.sent;\n              _iteratorNormalCompletion3 = _step3.done;\n              _context5.next = 71;\n              return _step3.value;\n\n            case 71:\n              _value3 = _context5.sent;\n\n              if (_iteratorNormalCompletion3) {\n                _context5.next = 113;\n                break;\n              }\n\n              field = _value3;\n              values = [];\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _context5.prev = 77;\n              _iterator4 = _asyncIterator(game[getPredicate(field)]);\n\n            case 79:\n              _context5.next = 81;\n              return _iterator4.next();\n\n            case 81:\n              _step4 = _context5.sent;\n              _iteratorNormalCompletion4 = _step4.done;\n              _context5.next = 85;\n              return _step4.value;\n\n            case 85:\n              _value4 = _context5.sent;\n\n              if (_iteratorNormalCompletion4) {\n                _context5.next = 92;\n                break;\n              }\n\n              val = _value4;\n              values = [].concat(_toConsumableArray(values), [val.value]);\n\n            case 89:\n              _iteratorNormalCompletion4 = true;\n              _context5.next = 79;\n              break;\n\n            case 92:\n              _context5.next = 98;\n              break;\n\n            case 94:\n              _context5.prev = 94;\n              _context5.t1 = _context5[\"catch\"](77);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context5.t1;\n\n            case 98:\n              _context5.prev = 98;\n              _context5.prev = 99;\n\n              if (!(!_iteratorNormalCompletion4 && _iterator4.return != null)) {\n                _context5.next = 103;\n                break;\n              }\n\n              _context5.next = 103;\n              return _iterator4.return();\n\n            case 103:\n              _context5.prev = 103;\n\n              if (!_didIteratorError4) {\n                _context5.next = 106;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 106:\n              return _context5.finish(103);\n\n            case 107:\n              return _context5.finish(98);\n\n            case 108:\n              _value5 = values.length > 1 ? values : values[0];\n              gameData = _objectSpread({}, gameData, _defineProperty({}, field.predicate, _value5));\n\n            case 110:\n              _iteratorNormalCompletion3 = true;\n              _context5.next = 65;\n              break;\n\n            case 113:\n              _context5.next = 119;\n              break;\n\n            case 115:\n              _context5.prev = 115;\n              _context5.t2 = _context5[\"catch\"](63);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context5.t2;\n\n            case 119:\n              _context5.prev = 119;\n              _context5.prev = 120;\n\n              if (!(!_iteratorNormalCompletion3 && _iterator3.return != null)) {\n                _context5.next = 124;\n                break;\n              }\n\n              _context5.next = 124;\n              return _iterator3.return();\n\n            case 124:\n              _context5.prev = 124;\n\n              if (!_didIteratorError3) {\n                _context5.next = 127;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 127:\n              return _context5.finish(124);\n\n            case 128:\n              return _context5.finish(119);\n\n            case 129:\n              _context5.next = 131;\n              return getPlayerInfo(gameData.opponent);\n\n            case 131:\n              opponent = _context5.sent;\n              _context5.next = 134;\n              return getPlayerInfo(gameData.actor);\n\n            case 134:\n              actor = _context5.sent;\n              gameData = _objectSpread({}, gameData, {\n                opponent: opponent,\n                actor: actor,\n                deleted: false,\n                documentUrl: url\n              });\n              _context5.next = 139;\n              break;\n\n            case 138:\n              gameData = _objectSpread({}, gameData, {\n                status: GameStatus.DELETED,\n                deleted: true,\n                documentUrl: url\n              });\n\n            case 139:\n              games = [].concat(_toConsumableArray(games), [gameData]);\n\n            case 140:\n              _iteratorNormalCompletion2 = true;\n              _context5.next = 46;\n              break;\n\n            case 143:\n              _context5.next = 149;\n              break;\n\n            case 145:\n              _context5.prev = 145;\n              _context5.t3 = _context5[\"catch\"](44);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context5.t3;\n\n            case 149:\n              _context5.prev = 149;\n              _context5.prev = 150;\n\n              if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n                _context5.next = 154;\n                break;\n              }\n\n              _context5.next = 154;\n              return _iterator2.return();\n\n            case 154:\n              _context5.prev = 154;\n\n              if (!_didIteratorError2) {\n                _context5.next = 157;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 157:\n              return _context5.finish(154);\n\n            case 158:\n              return _context5.finish(149);\n\n            case 159:\n              return _context5.abrupt(\"return\", games);\n\n            case 162:\n              _context5.prev = 162;\n              _context5.t4 = _context5[\"catch\"](0);\n              errorToaster(_context5.t4.message, 'Error');\n\n            case 165:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 162], [9, 27, 31, 41], [32,, 36, 40], [44, 145, 149, 159], [63, 115, 119, 129], [77, 94, 98, 108], [99,, 103, 107], [120,, 124, 128], [150,, 154, 158]]);\n    }));\n\n    return function (_x6) {\n      return _ref8.apply(this, arguments);\n    };\n  }(), [gamePath]);\n  /**\n   * Inits the game by fetching own games and games the player has been invited to\n   */\n\n  var init = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    var inviteGamesUrl, games, inviteGames, allGames;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setIsLoading(true);\n            _context6.next = 3;\n            return storageHelper.getAppStorage(webId);\n\n          case 3:\n            appPath = _context6.sent;\n            inviteGamesUrl = \"\".concat(appPath, \"data.ttl\");\n            _context6.next = 7;\n            return getGames(gamePath);\n\n          case 7:\n            games = _context6.sent;\n            _context6.next = 10;\n            return getGames(inviteGamesUrl);\n\n          case 10:\n            inviteGames = _context6.sent;\n            allGames = [];\n            if (Array.isArray(games)) allGames = [].concat(_toConsumableArray(allGames), _toConsumableArray(games));\n            if (Array.isArray(inviteGames)) allGames = [].concat(_toConsumableArray(allGames), _toConsumableArray(inviteGames));\n            setList(allGames);\n            setIsLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  })));\n  useEffect(function () {\n    if (gamePath) init();\n  }, [gamePath]);\n  useEffect(function () {\n    var currentTimestamp = timestamp && timestamp.toString();\n\n    if (timestamp && currentTimestamp !== oldTimestamp) {\n      init();\n      oldTimestamp = currentTimestamp;\n    }\n  }, [timestamp]);\n  return React.createElement(Wrapper, {\n    \"data-testid\": \"game-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, !isLoading ? React.createElement(GameListContainers, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, list && React.createElement(GameList, {\n    title: t('game.yourGames'),\n    games: list,\n    webId: webId,\n    deleteGame: deleteGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  })) : React.createElement(Loader, {\n    absolute: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }));\n};\n\nexport default List;","map":{"version":3,"sources":["c:/Users/alber/Desktop/ejemplo/src/containers/TicTacToe/GameListPage/children/List/list.component.js"],"names":["React","useState","useEffect","useCallback","useLiveUpdate","NotificationTypes","useTranslation","ldflex","namedNode","Loader","Select","tictactoeShape","ldflexHelper","errorToaster","storageHelper","notification","helperNotification","GameStatusList","GameStatus","KnownInboxes","Wrapper","ListWrapper","GameListContainers","GameListHeader","GameItem","oldTimestamp","appPath","GameList","title","games","webId","deleteGame","t","filteredGames","setFilteredGames","selectedFilter","setSelectedFilter","filterGameList","event","filter","target","value","ALL","filteredList","game","status","length","map","url","List","gamePath","sendNotification","list","setList","isLoading","setIsLoading","updates","timestamp","getPredicate","field","prefix","predicate","deleteGameFromContains","gameUrl","documentUrl","delete","resignedGame","actor","FINISHED","statusPredicate","licenseUrl","replace","RESIGNED","getAppStorage","gameSettings","GLOBAL","GAME","findUserInboxes","path","name","inboxes","to","getDefaultInbox","summary","object","LEAVE","deleted","opponent","deleteFile","newGames","gameItem","getPlayerInfo","nameValue","trim","toString","imageUrl","image","getGames","fetchLdflexDocument","document","gameList","item","includes","clearCache","gameData","shape","values","val","DELETED","message","init","inviteGamesUrl","inviteGames","allGames","Array","isArray","currentTimestamp"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useLiveUpdate, NotificationTypes } from '@inrupt/solid-react-components';\nimport { useTranslation } from 'react-i18next';\nimport ldflex from '@solid/query-ldflex';\nimport { namedNode } from '@rdfjs/data-model';\nimport { Loader, Select } from '@util-components';\nimport tictactoeShape from '@contexts/tictactoe-shape.json';\nimport {\n  ldflexHelper,\n  errorToaster,\n  storageHelper,\n  notification as helperNotification\n} from '@utils';\nimport { GameStatusList, GameStatus, KnownInboxes } from '@constants';\nimport { Wrapper, ListWrapper, GameListContainers, GameListHeader } from './list.style';\nimport GameItem from './children';\n\nlet oldTimestamp;\nlet appPath;\n\ntype Props = { webId: String, gamePath: String, sendNotification: Function };\ntype GameListProps = { title: String, games: Array, webId: String, deleteGame: Function };\n\n/**\n * Loads, filters, and displays the list of available games for the current user\n *\n * @param {String} title - Title of the list to display\n * @param {Array} games - A list of all of the games available to the user\n * @param {String} webId - WebID URL of the current user\n * @param {Function} deleteGame - A reference to the delete game function\n */\nconst GameList = ({ title, games, webId, deleteGame }: GameListProps) => {\n  const { t } = useTranslation();\n  const [filteredGames, setFilteredGames] = useState(games);\n  const [selectedFilter, setSelectedFilter] = useState('All');\n\n  /**\n   * Set the visible game list depending on what filter the user has selected\n   * @param event\n   */\n  const filterGameList = event => {\n    const filter = event.target.value;\n    if (filter === GameStatus.ALL) {\n      setFilteredGames(games);\n    } else {\n      const filteredList = games.filter(game => game.status === filter);\n      setFilteredGames(filteredList);\n    }\n    setSelectedFilter(filter);\n  };\n\n  return (\n    <div>\n      <GameListHeader>\n        <h2>{title}</h2>\n        <div className=\"input-wrap\">\n          <label htmlFor=\"selected-filter\">\n            {t('game.status')}\n            <Select\n              name=\"selected-filter\"\n              id=\"selected-filter\"\n              options={GameStatusList}\n              defaultValue={selectedFilter}\n              onChange={filterGameList}\n            />\n          </label>\n        </div>\n      </GameListHeader>\n      {filteredGames.length > 0 ? (\n        <ListWrapper className=\"ids-container__four-column grid\">\n          {filteredGames.map(game => (\n            <GameItem {...{ game }} key={game.url} webId={webId} deleteGame={deleteGame} />\n          ))}\n        </ListWrapper>\n      ) : (\n        <span>{t('game.nogames')}</span>\n      )}\n    </div>\n  );\n};\n\nconst List = ({ webId, gamePath, sendNotification }: Props) => {\n  const [list, setList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { t } = useTranslation();\n  const updates = useLiveUpdate();\n  const { timestamp } = updates;\n\n  /**\n   * Gets the entire predicate named Node based on a field property from the shape\n   * @param {String} field Field to get the predicate for\n   * @returns {String} Predicate for a field name\n   */\n  const getPredicate = field => {\n    const prefix = tictactoeShape['@context'][field.prefix];\n    return `${prefix}${field.predicate}`;\n  };\n\n  /**\n   * Deletes a game from a contains predicate in a specific url\n   * @param {String} gameUrl Game to delete\n   * @param {String} documentUrl URL of the document with a contains predicate\n   */\n  const deleteGameFromContains = async (gameUrl, documentUrl) => {\n    await ldflex[documentUrl]['schema:hasPart'].delete(namedNode(gameUrl));\n  };\n\n  /**\n   * Deletes a game as invitee, sets the game status to Resigned and sends a notification to the owner\n   * @param {Object} game Game to be deleted\n   */\n  const resignedGame = async ({ url, documentUrl, status, actor }) => {\n    if (status !== GameStatus.FINISHED) {\n      const statusPredicate = 'http://data.totl.net/game/status';\n      const licenseUrl = 'https://creativecommons.org/licenses/by-sa/4.0/';\n      // Change status to resigned\n      await ldflex[url][statusPredicate].replace(status, GameStatus.RESIGNED);\n\n      if (!appPath) {\n        appPath = await storageHelper.getAppStorage(actor.webId);\n      }\n\n      // Send notification\n      const gameSettings = `${appPath}settings.ttl`;\n      const { GLOBAL, GAME } = KnownInboxes;\n\n      const inboxes = await helperNotification.findUserInboxes([\n        { path: actor.webId, name: GLOBAL },\n        { path: gameSettings, name: GAME }\n      ]);\n\n      const to = helperNotification.getDefaultInbox(inboxes, GAME, GLOBAL);\n\n      await sendNotification(\n        {\n          title: 'Tictactoe resignation',\n          summary: 'has resigned a game of TicTacToe',\n          actor: webId,\n          object: url\n        },\n        to.path,\n        NotificationTypes.LEAVE,\n        licenseUrl\n      );\n    }\n    // Delete game from contains\n    await deleteGameFromContains(url, documentUrl);\n  };\n\n  /**\n   * Deletes a game based on it's url. Checks for a deleted flag\n   * to check if it needs to be deleted from a contains predicate\n   * @param {Object} game Game to be deleted\n   */\n  const deleteGame = async game => {\n    const { url, deleted, documentUrl, opponent } = game;\n    if (deleted) {\n      await deleteGameFromContains(url, documentUrl);\n    } else if (opponent.webId === webId) await resignedGame(game);\n    else await ldflexHelper.deleteFile(url);\n\n    const newGames = list.filter(gameItem => gameItem.url !== url);\n    setList(newGames);\n  };\n\n  /**\n   * Get basic info for the opponent player (name and image url)\n   * @param {String} webId WebId of the player to look the Info for\n   * @returns {Object} An object with the basic information of the player\n   */\n  const getPlayerInfo = useCallback(async webId => {\n    try {\n      const name = await ldflex[webId]['vcard:fn'];\n      const nameValue = name && name.value.trim().length > 0 ? name.value : webId.toString();\n      const imageUrl = await ldflex[webId]['vcard:hasPhoto'];\n      const image = imageUrl ? imageUrl.value : 'img/people.svg';\n      return { name: nameValue, image, webId };\n    } catch (e) {\n      return { name: webId, image: 'img/people.svg', webId };\n    }\n  });\n\n  /**\n   * Fetches all games from a url\n   * @param {String} url URL for the container to get the games from\n   */\n  const getGames = useCallback(\n    async url => {\n      try {\n        const document = await ldflexHelper.fetchLdflexDocument(url);\n        let gameList = [];\n        if (!document) return gameList;\n        for await (const item of document['schema:hasPart']) {\n          const { value } = item;\n          if (\n            value.includes('.ttl') &&\n            !value.includes('data.ttl') &&\n            !value.includes('settings.ttl')\n          )\n            gameList = [...gameList, value];\n        }\n        let games = [];\n        for await (const item of gameList) {\n          // the url at this point the document is being cached by LDFlex, we need to manually clear it\n          ldflex.clearCache(item);\n          const game = await ldflexHelper.fetchLdflexDocument(item);\n          let gameData = { url: item };\n          if (game) {\n            for await (const field of tictactoeShape.shape) {\n              let values = [];\n              for await (const val of game[getPredicate(field)]) {\n                values = [...values, val.value];\n              }\n              const value = values.length > 1 ? values : values[0];\n              gameData = { ...gameData, [field.predicate]: value };\n            }\n            const opponent = await getPlayerInfo(gameData.opponent);\n            const actor = await getPlayerInfo(gameData.actor);\n            gameData = { ...gameData, opponent, actor, deleted: false, documentUrl: url };\n          } else {\n            gameData = { ...gameData, status: GameStatus.DELETED, deleted: true, documentUrl: url };\n          }\n          games = [...games, gameData];\n        }\n        return games;\n      } catch (e) {\n        errorToaster(e.message, 'Error');\n      }\n    },\n    [gamePath]\n  );\n\n  /**\n   * Inits the game by fetching own games and games the player has been invited to\n   */\n  const init = useCallback(async () => {\n    setIsLoading(true);\n    appPath = await storageHelper.getAppStorage(webId);\n\n    const inviteGamesUrl = `${appPath}data.ttl`;\n    const games = await getGames(gamePath);\n    const inviteGames = await getGames(inviteGamesUrl);\n\n    let allGames = [];\n\n    if (Array.isArray(games)) allGames = [...allGames, ...games];\n\n    if (Array.isArray(inviteGames)) allGames = [...allGames, ...inviteGames];\n    setList(allGames);\n    setIsLoading(false);\n  });\n\n  useEffect(() => {\n    if (gamePath) init();\n  }, [gamePath]);\n\n  useEffect(() => {\n    const currentTimestamp = timestamp && timestamp.toString();\n    if (timestamp && currentTimestamp !== oldTimestamp) {\n      init();\n      oldTimestamp = currentTimestamp;\n    }\n  }, [timestamp]);\n\n  return (\n    <Wrapper data-testid=\"game-list\">\n      {!isLoading ? (\n        <GameListContainers>\n          {list && (\n            <GameList\n              title={t('game.yourGames')}\n              games={list}\n              webId={webId}\n              deleteGame={deleteGame}\n            />\n          )}\n        </GameListContainers>\n      ) : (\n        <Loader absolute />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}